# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform latest'

#Your build pipeline references an undefined variable named ‘tfstateFile’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972


- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : init'
  inputs:
    backendServiceArm: 'Free Trial (3c8deffd-e61e-4cf4-a054-0414465da130)'
    backendAzureRmResourceGroupName: kumar
    backendAzureRmStorageAccountName: strdemo
    backendAzureRmContainerName: terraform
    backendAzureRmKey: '$(tfstateFile)'


- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : plan'
  inputs:
    command: plan
    environmentServiceNameAzureRM: 'Free Trial (3c8deffd-e61e-4cf4-a054-0414465da130)'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : apply'
  inputs:
    command: apply
    environmentServiceNameAzureRM: 'Free Trial (3c8deffd-e61e-4cf4-a054-0414465da130)'